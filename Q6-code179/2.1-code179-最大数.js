/** 

给定一组非负整数 nums，重新排列每个数的顺序（每个数不可拆分）使之组成一个最大的整数。
注意：输出结果可能非常大，所以你需要返回一个字符串而不是整数。

 
示例 1：
输入：nums = [10,2]
输出："210"

示例 2：
输入：nums = [3,30,34,5,9]
输出："9534330"
*/


function largestNumber(nums) {
  // 数学排序规则（这里^表示的数学上的幂运算，而不是异或符）：
  //     b * 10 ^ a + a - (a * 10 ^ b.length + b) 降序排列

  // 易错点1：由于此题是大数比较，直接用数字比较可能会溢出，所以这里用字符串比较
  // 这里期望是降序，所以字符串的返回值期望是正数
  nums.sort((a,b) => +`${b}${a}` - +`${a}${b}`)

  // 易错点2：如果排序后的数组第一个元素是0，有可能存在前导0情况，所以这里直接返回0
  if (nums[0] === 0) return '0'
  return nums.join('')
};